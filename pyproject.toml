[tool.poetry]
name = "test-bootcamp"
version = "0.1.0"
description = ""
authors = ["karmaxa <mikita.karmanaw@gmail.com>"]
readme = "README.md"
packages = []

[tool.poetry.dependencies]
black = "^23.1.0"
coverage = "^7.1.0"
django = "^4.1.7"
django-debug-toolbar = "^3.8.1"
django-extensions = "^3.2.1"
django-filter = "^22.1"
django-health-check = "^3.17.0"
django-silk = "^5.0.3"
django-stubs = "^1.15.0"
flake8 = "^6.0.0"
flake8-annotations-complexity = "^0.0.7"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.6"
flake8-bugbear = "^23.1.20"
flake8-builtins = "^2.1.0"
flake8-cognitive-complexity = "^0.1.0"
flake8-comprehensions = "^3.10.1"
flake8-debugger = "^4.1.2"
flake8-executable = "^2.1.3"
flake8-expression-complexity = "^0.0.11"
flake8-fixme = "^1.1.1"
flake8-isort = "^6.0.0"
flake8-multiline-containers = "^0.0.19"
flake8-mutable = "^1.2.0"
flake8-pep3101 = "^2.0.0"
flake8-print = "^5.0.0"
flake8-printf-formatting = "^1.1.2"
flake8-pyproject = "^1.2.3"
flake8-simplify = "^0.19.3"
flake8-variables-names = "^0.0.5"
greenlet = "^2.0.2"
ipython = "^8.10.0"
isort = "^5.12.0"
mypy = "^1.0.1"
pep8-naming = "^0.13.0"
pip = "^23.0"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
python = "^3.11"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 79
target-version = ["py310"]
include = '^.+\.pyi?$'
extend-exclude = '''
(
    .*\.artifacts.*
    | .*\.github.*
    | .*\.idea.*
    | .*\.vscode.*
    | .*docs.*
)
'''


[tool.flake8]
ignore = ["S101", "EXE001"]


[tool.isort]
force_single_line = true
line_length = 79
multi_line_output = 3
profile = "black"
skip = [
    ".artifacts",
    ".github",
    ".idea",
    ".vscode",
    "docs",
]


[tool.mypy]
cache_dir = ".artifacts/mypy/"
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = [
    ".artifacts",
    ".github",
    ".idea",
    ".vscode",
    "docs",
]


[tool.pytest.ini_options]
cache_dir = ".artifacts/pytest/"
console_output_style = "count"
filterwarnings = [
    "ignore::DeprecationWarning",
]
testpaths = [
    "tests/test.py",
]
addopts = "--cov --cov-branch --no-cov-on-fail --cov-fail-under=100"
